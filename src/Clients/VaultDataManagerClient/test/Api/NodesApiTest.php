<?php
/**
 * NodesApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  AffinidiTdk\Clients\VaultDataManagerClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * VaultFileSystem
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@affinidi.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace AffinidiTdk\Clients\VaultDataManagerClient\Test\Api;

use \AffinidiTdk\Clients\VaultDataManagerClient\Configuration;
use \AffinidiTdk\Clients\VaultDataManagerClient\ApiException;
use \AffinidiTdk\Clients\VaultDataManagerClient\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * NodesApiTest Class Doc Comment
 *
 * @category Class
 * @package  AffinidiTdk\Clients\VaultDataManagerClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class NodesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createNode
     *
     * .
     *
     */
    public function testCreateNode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNode
     *
     * .
     *
     */
    public function testDeleteNode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDetailedNodeInfo
     *
     * .
     *
     */
    public function testGetDetailedNodeInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for initNodes
     *
     * .
     *
     */
    public function testInitNodes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listNodeChildren
     *
     * .
     *
     */
    public function testListNodeChildren()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRootNodeChildren
     *
     * .
     *
     */
    public function testListRootNodeChildren()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for moveNode
     *
     * .
     *
     */
    public function testMoveNode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for permanentlyDeleteNode
     *
     * .
     *
     */
    public function testPermanentlyDeleteNode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreNodeFromTrashbin
     *
     * .
     *
     */
    public function testRestoreNodeFromTrashbin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNode
     *
     * .
     *
     */
    public function testUpdateNode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
